<Window x:Class="EVRangeCalculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EVRangeCalculator"
        xmlns:vm="clr-namespace:EVRangeCalculator.ViewModels"
        xmlns:models="clr-namespace:EVRangeCalculator.Models"
        mc:Ignorable="d"
        Title="EV Range Calculator" Height="Auto" Width="600" MinWidth="500" MaxWidth="700" SizeToContent="Height" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <!-- Existing Styles -->
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Validation ErrorTemplate -->
        <ControlTemplate x:Key="ValidationErrorTemplate">
            <DockPanel LastChildFill="True">
                <TextBlock DockPanel.Dock="Right"
                           Foreground="Red"
                           FontSize="12"
                           Margin="3,0,0,0"
                           ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">*</TextBlock>
                <Border BorderBrush="Red" BorderThickness="1">
                    <AdornedElementPlaceholder Name="customAdorner"/>
                </Border>
            </DockPanel>
        </ControlTemplate>

        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}"/>
            <!-- ToolTip for validation errors (can be kept or removed if the asterisk + adorner is preferred) -->
            <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}"/>
            <!-- ToolTip for validation errors -->
            <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
        </Style>
        <Style TargetType="Button" x:Key="PrimaryButton">
            <Setter Property="Margin" Value="0,10,0,10"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005A9E"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#A0A0A0"/>
                                <Setter Property="Foreground" Value="#E0E0E0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="ResultText">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Margin" Value="0,20,0,0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
    </Window.Resources>
    <Border Padding="20" Background="#F0F0F0">
        <Grid>
            <Grid.DataContext>
                <vm:MainWindowViewModel/>
            </Grid.DataContext>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/> <!-- Vehicle Profile Selector -->
                <RowDefinition Height="Auto"/> <!-- Reset Custom Profile Button -->
                <RowDefinition Height="Auto"/> <!-- Start Location -->
                <RowDefinition Height="Auto"/> <!-- End Location -->
                <RowDefinition Height="Auto"/> <!-- Fetch Route Button -->
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/> 
                <RowDefinition Height="Auto"/> <!-- Driving Style Factor -->
                <RowDefinition Height="Auto"/> <!-- Calculate Button -->
                <RowDefinition Height="*"/>    <!-- Result TextBlock -->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="Vehicle Profile:" Grid.Row="0" Grid.Column="0" FontWeight="SemiBold" VerticalAlignment="Center"/>
            <ComboBox ItemsSource="{Binding VehicleProfiles}"
                      SelectedItem="{Binding SelectedVehicleProfile, ValidatesOnDataErrors=True}"
                      DisplayMemberPath="ProfileName" 
                      Grid.Row="0" Grid.Column="1" Width="Auto" MinWidth="200" Margin="0,0,0,5"/>

            <Button Content="Reset Custom Profile" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,0,10" Padding="5,2"
                    Command="{Binding ResetCustomProfileCommand}" Style="{StaticResource PrimaryButton}" Background="#6c757d"/>

            <TextBlock Text="Start Location:" Grid.Row="2" Grid.Column="0" FontWeight="SemiBold"/>
            <TextBox Text="{Binding StartLocationText, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Grid.Row="2" Grid.Column="1" Width="Auto" MinWidth="200"/>

            <TextBlock Text="End Location:" Grid.Row="3" Grid.Column="0" FontWeight="SemiBold"/>
            <TextBox Text="{Binding EndLocationText, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Grid.Row="3" Grid.Column="1" Width="Auto" MinWidth="200"/>

            <Button Content="Get Route &amp; Elevation" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="0,5,0,10" Command="{Binding FetchRouteCommand}" Style="{StaticResource PrimaryButton}" Background="#17a2b8"/>

            <TextBlock Text="Battery Capacity (kWh):" Grid.Row="5" Grid.Column="0" FontWeight="SemiBold"/>
            <TextBox Text="{Binding BatteryCapacityText, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Grid.Row="5" Grid.Column="1" Width="Auto" MinWidth="200"/>

            <TextBlock Text="Efficiency (Wh/km):" Grid.Row="6" Grid.Column="0" FontWeight="SemiBold"/>
            <TextBox Text="{Binding EfficiencyText, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Grid.Row="6" Grid.Column="1" Width="Auto" MinWidth="200"/>

            <TextBlock Text="Distance (km):" Grid.Row="7" Grid.Column="0" FontWeight="SemiBold"/>
            <TextBox Text="{Binding DistanceText, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Grid.Row="7" Grid.Column="1" Width="Auto" MinWidth="200"/>

            <TextBlock Text="Elevation Gain (m):" Grid.Row="8" Grid.Column="0" FontWeight="SemiBold"/>
            <TextBox Text="{Binding ElevationGainText, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Grid.Row="8" Grid.Column="1" Width="Auto" MinWidth="200" IsReadOnly="{Binding IsElevationReadOnly}"/>

            <TextBlock Text="Weather Condition:" Grid.Row="9" Grid.Column="0" FontWeight="SemiBold"/>
            <ComboBox ItemsSource="{Binding Source={x:Static vm:MainWindowViewModel.WeatherConditions}}"
                      SelectedItem="{Binding SelectedWeatherCondition, ValidatesOnDataErrors=True}"
                      Grid.Row="9" Grid.Column="1" Width="Auto" MinWidth="200"/>

            <TextBlock Text="Driving Style Factor:" Grid.Row="10" Grid.Column="0" FontWeight="SemiBold"/>
            <TextBox Text="{Binding DrivingStyleFactorText, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Grid.Row="10" Grid.Column="1" Width="Auto" MinWidth="200"/>

            <Button Content="Calculate Range" Grid.Row="11" Grid.Column="0" Grid.ColumnSpan="2" Width="Auto" MinWidth="150" HorizontalAlignment="Center" Command="{Binding CalculateRangeCommand}" Style="{StaticResource PrimaryButton}"/>

            <TextBlock Text="{Binding ResultText}" Grid.Row="12" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource ResultText}"/>
        </Grid>
    </Border>
</Window>
